{"version":3,"sources":["components/common/styles.js","components/common/Loader.tsx","components/login/styles.js","components/login/index.tsx","components/game/style.js","components/game/index.tsx","components/utils/constants.js","components/individual-card/styles.js","components/individual-card/index.tsx","components/card/styles.js","components/card/index.tsx","components/playground/index.tsx","App.style.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["themeColors","loaderStyles","makeStyles","loaderContainerFull","display","justifyContent","alignItems","height","width","backgroundColor","loaderContainer","colorPrimary","color","animation","colorDefault","Loading","fullScreen","defaultColor","styles","className","Grid","container","item","xs","CircularProgress","classes","useStyles","root","textAlign","maxHeight","maxWidth","borderRadius","paddingLeft","fontSize","borderColor","padding","textTransform","Login","onSubmit","useState","name","setName","error","setError","lg","Typography","component","TextField","type","value","onChange","e","target","trim","length","variant","id","helperText","InputProps","Button","disabled","onClick","localStorage","setItem","background","paddingBottom","margin","opacity","Game","startGame","numberOfCards","setNumberOfCards","getItem","parseInt","label","typesOfCards","userSelect","boxSizing","marginBottom","transition","transformStyle","position","minWidth","cursor","lineHeight","pointerEvents","backfaceVisibility","top","left","transform","verticalAlign","boxShadow","IndividualCard","close","complete","click","framework","closed","setClosed","useEffect","clsx","clicked","src","process","alt","minHeight","flexWrap","Card","startTime","playAgain","finalizedCards","setFinalizedCards","openedCards","setOpenedCards","Date","endTime","setEndTime","isGameEnded","setIsGameEnded","check","finalizedFrameworks","index","filter","start","uniqueCards","splice","duplicatedFrameworks","concat","console","log","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","forEach","push","fail","timeDiff","getTime","round","getTotalTimeTaken","map","setTimeout","frameworks","handleClick","Playground","isGameBegun","setIsGameBegun","loading","setLoading","setStartTime","Loader","cards","App","isLoggedIn","setIsLoggedIn","username","undefined","mount","a","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.937df077.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nconst themeColors = {\n  red: '#ea4335',\n  blue: '#4285f4',\n  yellow: '#fbbc05',\n  green: '#34a853',\n  purple: '#b60b5f',\n  grey: '#BDBDBD',\n  pink: '#880e4f',\n};\n\nconst loaderStyles = makeStyles({\n  loaderContainerFull: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: themeColors.grey,\n  },\n  loaderContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '110px',\n    width: 'auto',\n  },\n  colorPrimary: {\n    color: themeColors.blue,\n    animation: '$changeColors 1s infinite',\n  },\n  colorDefault: {\n    color: themeColors.pink,\n  },\n  '@keyframes changeColors': {\n    '0%': {\n      color: themeColors.red,\n    },\n    '25%': {\n      color: themeColors.yellow,\n    },\n    '50%': {\n      color: themeColors.green,\n    },\n    '75%': {\n      color: themeColors.purple,\n    },\n    '100%': {\n      color: themeColors.red,\n    },\n  },\n});\n\nexport {\n  loaderStyles,\n  themeColors,\n};\n","import React, { ReactElement } from 'react';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { loaderStyles } from './styles';\n\ntype Props = {\n  fullScreen: boolean;\n  defaultColor: boolean;\n};\n\nconst Loading = ({ fullScreen, defaultColor }: Props): ReactElement => {\n  const styles = loaderStyles();\n  const className = fullScreen ? styles.loaderContainerFull : styles.loaderContainer;\n  return (\n    <Grid container item xs={12} className={className}>\n      <CircularProgress classes={{ colorPrimary: !defaultColor ? styles.colorPrimary : styles.colorDefault }} />\n    </Grid>\n  );\n};\n\nexport default Loading;\n","import { makeStyles } from '@material-ui/core';\nimport { themeColors } from '../common/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    backgroundColor: themeColors.pink,\n    height: '100vh',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& .login-box': {\n      backgroundColor: themeColors.blue,\n      height: '70vh',\n      maxHeight: '600px',\n      maxWidth: '400px',\n      width: '35vw',\n      borderRadius: '15px',\n      color: 'white',\n      '@media (max-width: 600px)' : {\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n        height: '100vh',\n        borderRadius: '0px',\n      },\n      '& .login-box-heading': {\n        height: '35%',\n        textAlign: 'center',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: themeColors.green,\n        borderRadius: '15px 15px 100% 0px',\n        paddingLeft: '30px',\n        '& p': {\n          fontSize: '20px',\n        },\n        '@media (max-width: 600px)' : {\n          borderRadius: '0px 0px 100% 0px',\n        },\n      },\n      '& .login-box-input': {\n        height: '30%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        color: 'white',\n        '& .text-input': {\n          height: '20%',\n          color: 'white',\n        },\n        '& .text-input-error': {\n          borderColor: themeColors.red,\n        },\n      },\n      '& .login-box-submit': {\n        height: '35%',\n        maxHeight: '240px',\n        display: 'flex',\n        alignItems: 'flex-end',\n        justifyContent: 'flex-end',\n        backgroundColor: themeColors.yellow,\n        borderRadius: '100% 0px 15px 15px',\n        padding: '0px 25px 25px 0px',\n        '@media (max-width: 600px)' : {\n          borderRadius: '100% 0px 0px 0px',\n          maxHeight: 'max-content',\n        },\n        '& .play-btn-root': {\n          textAlign: 'center',\n          alignItems: 'center',\n          color: 'white',\n          fontSize: '20px',\n          textTransform: 'capitalize',\n        },\n        '& .play-btn-disabled': {\n          color: 'gray',\n        }\n      }\n    },\n  }\n});\n\nexport default useStyles;\n","import React, { ReactElement, useState } from 'react';\nimport { Grid, TextField, Typography, Button } from '@material-ui/core';\nimport useStyles from './styles';\n\ntype Props = {\n  onSubmit: () => void;\n};\n\nconst Login = ({ onSubmit }: Props): ReactElement => {\n  const styles = useStyles();\n  const [name, setName] = useState('');\n  const [error, setError] = useState(false);\n  return (\n    <Grid container className={styles.root}>\n      <Grid item xs={12} lg={6} className=\"login-box\">\n        <Grid item xs={12} className=\"login-box-heading\">\n          <Typography component=\"p\">Enter your username</Typography>\n        </Grid>\n        <Grid item xs={12} className=\"login-box-input\">\n          <TextField\n            type=\"text\"\n            value={name}\n            onChange={(e) => {\n              if (e.target.value.trim() === '' || e.target.value.trim().length > 50) {\n                setError(true);\n              } else {\n                setError(false);\n              }\n              setName(e.target.value);\n            }}\n            variant=\"outlined\"\n            error={error}\n            id=\"outlined-error-helper-text\"\n            helperText={error ? \"Incorrect name.\": \"\"}\n            classes={{\n              root: \"text-input\",\n            }}\n            InputProps={{\n              classes: {\n                error: \"text-input-error\",\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className=\"login-box-submit\">\n          <Button\n            disabled={error || name.trim() === ''}\n            classes={{\n              root: \"play-btn-root\",\n              disabled: \"play-btn-disabled\",\n            }}\n            onClick={() => {\n              if (error || name.trim() === '' || name.trim().length > 50) {\n                return;\n              } else {\n                localStorage.setItem('username', name.trim());\n                onSubmit();\n              }\n            }}\n          >\n            Play\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import { makeStyles } from '@material-ui/core';\nimport { themeColors } from '../common/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    height: '100vh',\n    background: 'linear-gradient(90deg, #8E2DE2, #4A00E0)',\n    '& .user-name-heading': {\n      color: 'white',\n      fontSize: '20px',\n      '& p': {\n        fontSize: '5vh',\n      },\n    },\n    '& .game-container': {\n      backgroundColor: themeColors.yellow,\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      height: '75vh',\n      width: '60vw',\n      maxWidth: '600px',\n      maxHeight: '600px',\n      borderRadius: '15px',\n      '@media (max-width: 600px)' : {\n        maxWidth: '360px',\n        width: '85vw',\n      },\n      '& .game-name-heading': {\n        backgroundColor: themeColors.green,\n        height: '15%',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        borderRadius: '15px 15px 0px 75%',\n        padding: '40px',\n        '@media (max-width: 600px)' : {\n          padding: '20px',\n        },\n        '& p': {\n          fontSize: 35,\n          color: 'white',\n          '@media (max-width: 600px)' : {\n            fontSize: 20,\n          },\n        },\n      },\n      '& .game-box-input': {\n        backgroundColor: themeColors.blue,\n        height: '70%',\n        justifyContent: 'center',\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: '50% 100%',\n        '& .text-input': {\n          height: '90px',\n        },\n        '& .text-input-error': {\n          borderColor: themeColors.red,\n        },\n      },\n      '& .game-box-button': {\n        height: '15%',\n        alignItems: 'flex-end',\n        display: 'flex',\n        backgroundColor: themeColors.red,\n        borderRadius: '0px 75% 15px 15px',\n        paddingBottom: '15px',\n        '@media (max-width: 600px)' : {\n          paddingBottom: '10px',\n        },\n        '& .play-btn-root': {\n          color: 'white',\n          fontSize: 20,\n          margin: '0px 20px',\n          '@media (max-width: 600px)' : {\n            fontSize: 17,\n            margin: '0px 14px',\n          },\n        },\n        '& .play-btn-disabled': {\n          opacity: 0.5,\n        },\n      },\n    },\n  },\n});\n\nexport default useStyles;\n","import React, { ReactElement, useState } from 'react';\nimport { Grid, TextField, Typography, Button } from '@material-ui/core';\nimport useStyles from './style';\n\ntype Props = {\n  startGame: (cards: number) => void;\n};\n\nconst Game = ({ startGame }: Props): ReactElement => {\n  const styles = useStyles();\n  const [numberOfCards, setNumberOfCards] = useState(0);\n  const [error, setError] = useState(false);\n  return (\n    <Grid container className={styles.root}>\n      <Grid item xs={12} className=\"user-name-heading\">\n        <Typography component=\"p\">\n          Welcome {localStorage.getItem('username')}!\n        </Typography>\n      </Grid>\n      <Grid container className=\"game-container\">\n        <Grid item xs={12} className=\"game-name-heading\">\n          <Typography component=\"p\">Memory Game</Typography>\n        </Grid>\n        <Grid item xs={12} className=\"game-box-input\">\n          <TextField\n            type=\"number\"\n            value={numberOfCards}\n            onChange={(e) => {\n              if (\n                parseInt(e.target.value) === 0 ||\n                parseInt(e.target.value) > 30 ||\n                parseInt(e.target.value) % 2 !== 0 ||\n                parseInt(e.target.value) < 0\n              ) {\n                setError(true);\n              } else {\n                setError(false);\n              }\n              if (e.target.value === '') {\n                setNumberOfCards(0);\n              } else setNumberOfCards(parseInt(e.target.value));\n            }}\n            variant=\"outlined\"\n            error={error}\n            id=\"outlined-error-helper-text\"\n            helperText={error ? \"Incorrect number\" : \"\"}\n            classes={{\n              root: \"text-input\",\n            }}\n            InputProps={{\n              classes: {\n                error: \"text-input-error\",\n              },\n            }}\n            label=\"Number of cards\"\n          />\n        </Grid>\n        <Grid item xs={12} className=\"game-box-button\">\n          <Button\n            disabled={error || numberOfCards === 0}\n            classes={{\n              root: \"play-btn-root\",\n              disabled: \"play-btn-disabled\",\n            }}\n            onClick={() => {\n              if (numberOfCards === 0 || numberOfCards > 30 || numberOfCards < 0) {\n                return;\n              } else {\n                startGame(numberOfCards);\n              }\n            }}\n          >\n            Let's Begin\n        </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Game;\n","const typesOfCards = [\n  'angular2',\n  'vue',\n  'react',\n  'grunt',\n  'phantomjs',\n  'ember',\n  'babel',\n  'ionic',\n  'gulp',\n  'meteor',\n  'yeoman',\n  'yarn',\n  'nodejs',\n  'bower',\n  'browserify',\n];\n\nexport {\n  typesOfCards,\n};\n","import { makeStyles } from '@material-ui/core';\nimport { themeColors } from '../common/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '15%',\n    userSelect: 'none',\n    height: '110px',\n    padding: '10px',\n    boxSizing: 'border-box',\n    textAlign: 'center',\n    marginBottom: '15px',\n    transition: '0.6s',\n    transformStyle: 'preserve-3d',\n    position: 'relative',\n    minWidth: '120px',\n    margin: '15px',\n    '& .question-mark': {\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      backgroundColor: themeColors.grey,\n      height: '110px',\n      width: '100%',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      '& p': {\n        fontSize: '50px',\n        lineHeight: '120px',\n        color: themeColors.blue,\n      },\n    },\n    '& .unclickable': {\n      pointerEvents: 'none',\n      cursor: 'default',\n    },\n    '& .div-container': {\n      backfaceVisibility: 'hidden',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '10px',\n      transition: '0.6s',\n      background: '#f4f5f7',\n    },\n    '& .front': {\n      fontSize: '50px',\n      lineHeight: '120px',\n      cursor: 'pointer',\n      // color: 'darken(#f4f5f7,20%)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      //background: '-webkit-linear-gradient(to top, #FFFFFF, #ECE9E6)',\n      //background: 'linear-gradient(to top, #FFFFFF, #ECE9E6)',\n    },\n    '& .back': {\n      transform: 'rotateY(180deg)',\n      lineHeight: '110px',\n      '& img': {\n        verticalAlign: 'middle',\n        width: '70%',\n      },\n      '& .image-still-loading': {\n        display: 'none',\n      },\n    },\n    '& .matched': {\n      '& .back': {\n        boxShadow: '0 0 0 2px rgba(#000,.05) inset',\n        animation: '$selected .8s 0s ease 1',\n        'animation-fill-mode': 'both',\n        opacity: 0.2,\n      },\n    },\n  },\n  '@keyframes selected': {\n    '0%': {\n      opacity: 0.2,\n    },\n    '30%': {\n      opacity: 0.5,\n    },\n    '50%': {\n      opacity: 0.9,\n    },\n    '70%': {\n      opacity: 0.2,\n    },\n    '100%': {\n      opacity: 0.3,\n    },\n  }\n});\n\nexport default useStyles;\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport useStyles from './styles';\nimport clsx from 'clsx';\n\ntype Props = {\n  close: boolean;\n  complete: boolean;\n  click: (framework: string) => void;\n  framework: string;\n};\n\nconst IndividualCard = ({ close, complete, click, framework }: Props): ReactElement => {\n  const [closed, setClosed] = useState(close);\n\n  useEffect(() => {\n    setClosed(close);\n  }, [close, complete, click, framework]);\n\n  const styles = useStyles();\n\n  /**\n   * Action to be performed on the click of the card.\n   * @param  {String} framework - Name of the framework\n   * @return {void}\n  */\n  const clicked = (framework: string): void => {\n    if (close) {\n      setClosed(false);\n    }\n    click(framework);\n  };\n\n\n  return (\n    <Grid className={styles.root}>\n      <Grid\n        className={clsx(!closed ? 'opened' : '', complete ? 'matched' : '')}\n        onClick={() => clicked(framework)}\n      >\n        {\n          !closed || (closed && complete) ? (\n            <div className=\"\">\n              <img\n                className=\"image-loaded\"\n                src={`${process.env.PUBLIC_URL}/assets/logos/${framework}.png`}\n                alt={framework}\n              />\n            </div>\n          ) : (\n            <Grid xs={12} className=\"question-mark\">\n              <p>?</p>\n            </Grid>\n          )\n        }\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default IndividualCard;\n","import { makeStyles } from '@material-ui/core';\nimport { themeColors } from '../common/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    minHeight: '100vh',\n    height: 'auto',\n    width: '100vw',\n    backgroundColor: themeColors.green,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '& .playground-container': {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      flexWrap: 'inherit',\n      width: '100%',\n    },\n    '& .unclickable': {\n      pointerEvents: 'none',\n      cursor: 'default',\n      opacity: '0.8',\n    }\n  },\n});\n\nexport default useStyles;\n","import React, { ReactElement, useState, useEffect } from 'react';\nimport { typesOfCards } from '../utils/constants';\nimport IndividualCard from '../individual-card/index';\nimport { Grid, Button } from '@material-ui/core';\nimport useStyles from './styles';\nimport clsx from 'clsx';\n\ntype Props = {\n  numberOfCards: number;\n  startTime: Date;\n  playAgain: () => void;\n};\n\ntype CardType = {\n  name: string;\n  close: boolean;\n  complete: boolean;\n  fail: boolean;\n};\n\ntype FrameworkType = {\n  name: string;\n  index: number;\n};\n\nconst Card = ({ numberOfCards, startTime, playAgain }: Props): ReactElement => {\n  const [finalizedCards, setFinalizedCards] = useState<Array<CardType>>([]);\n  const [openedCards, setOpenedCards] = useState<Array<FrameworkType>>([]);\n  const [endTime, setEndTime] = useState<Date>(new Date());\n  const [isGameEnded, setIsGameEnded] = useState(false);\n  const styles = useStyles();\n\n  /** \n    * This function is used to do the comparison of the elements present in the openedCards array.\n    * @return {void}\n  */\n  const check = (): void => {\n    let finalizedFrameworks = finalizedCards;\n    /**\n      Checking whether the name of the elements present in the openedCards array are the same,\n      but the index are different. It will show if the cards are different sequence wise.\n    */\n    if (\n      (openedCards[0].name === openedCards[1].name) &&\n      (openedCards[0].index !== openedCards[1].index)\n    ) {\n      /**\n        If they are same, then update the complete property of the particular objects in the finalizedCards to true.\n      */\n      finalizedFrameworks[openedCards[0].index].complete = true;\n      finalizedFrameworks[openedCards[1].index].complete = true;\n    } else {\n      /**\n        Otherwise close the elements by setting the close property of the particular objects in the finalizedCards to true.\n      */\n      finalizedFrameworks[openedCards[0].index].close = true;\n      finalizedFrameworks[openedCards[1].index].close = true;\n    }\n    // Checking whether the game is ended.\n    const gameHasFinished = finalizedFrameworks.filter((framework: CardType) => framework.complete === true);\n    if (gameHasFinished.length === finalizedFrameworks.length) {\n      setIsGameEnded(true);\n      setEndTime(new Date());\n    }\n    // Then update the states with the updated frameworkCards value and empty the openedFrameworks array.\n    setFinalizedCards(finalizedFrameworks);\n    setOpenedCards([]);\n  };\n\n  /**\n    * The event that is being fired when the user clicks on the card.\n    * @param {string} name - The name of the card on which the user has clicked.\n    * @param {number} index - The index of the card on which the user has clicked.\n    * @return {void}\n  */\n  const handleClick = (name: string, index: number): void => {\n    /**\n      Checking whether the length of the openedCards array is 2,\n      so that we can check whether both the elements in the array are of the same framework.\n    */\n    if (openedCards.length === 2) {\n      setTimeout(() => {\n        check();\n      }, 750);\n    } else {\n      /**\n        If the length is 1 or 0, then we will create the element and push it inside the openedCards array.\n      */\n      let framework: FrameworkType = {\n        name,\n        index,\n      };\n      let finalizedFrameworks = finalizedCards;\n      let frameworks: Array<FrameworkType> = openedCards;\n      finalizedFrameworks[index].close = false;\n      frameworks.push(framework);\n      setOpenedCards(frameworks);\n      setFinalizedCards(finalizedFrameworks);\n      /**\n        After the element is pushed, if the length becomes 2, then we will do the comparison again.\n      */\n      if (frameworks.length === 2) {\n        setTimeout((): void => {\n          check();\n        }, 750);\n      };\n    }\n  };\n\n  /** \n    * Shuffling the cards in the random order.\n    * @param {array} array - The array that is required to be shuffled.\n    * @return {array} The array after being shuffled.\n  */\n  const shuffle = (array: Array<string>): Array<string> => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  /** \n    * Function to be called when the component is mounted.\n  */\n  const start = (): void => {\n    let finalizedFrameworks: Array<CardType> = [];\n    const uniqueCards = typesOfCards.splice(0, numberOfCards / 2);\n    let duplicatedFrameworks: Array<string> = uniqueCards.concat(uniqueCards);\n    console.log(duplicatedFrameworks, 'duplicatedFrameworks');\n    let randomizedFrameworks = shuffle(duplicatedFrameworks);\n    randomizedFrameworks.forEach((name: string): void => {\n      finalizedFrameworks.push({\n        name,\n        close: true,\n        complete: false,\n        fail: false\n      });\n    });\n    setFinalizedCards(finalizedFrameworks);\n  }\n\n  useEffect((): void => {\n    start();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getTotalTimeTaken = (): number => {\n    let timeDiff: number = endTime.getTime() - startTime.getTime(); //in ms\n    // strip the ms\n    timeDiff /= 1000;\n\n    // get seconds \n    const seconds = Math.round(timeDiff);\n    return seconds;\n  };\n\n  return (\n    <Grid container className={styles.root}>\n      <Grid xs={12} className={clsx(\"playground-container\")}>\n        {isGameEnded && (\n          <Grid item xs={12}>\n            <h1>{`You've completed the game in ${getTotalTimeTaken()} seconds for ${numberOfCards} cards.`}</h1>\n            <Button onClick={playAgain}>Play Again</Button>\n          </Grid>\n        )}\n        {!isGameEnded && finalizedCards.map((framework: CardType, index: number): ReactElement => {\n          return (\n            <IndividualCard\n              framework={framework.name}\n              click={() => handleClick(framework.name, index)}\n              close={framework.close}\n              complete={framework.complete}\n            />\n          );\n        })}\n      </Grid>\n    </Grid >\n  );\n};\n\nexport default Card;\n","import React, { ReactElement, useState } from 'react';\nimport Game from '../game/index';\nimport Loader from '../common/Loader';\nimport Card from '../card/index';\n\nconst Playground = (): ReactElement => {\n  const [numberOfCards, setNumberOfCards] = useState(0);\n  const [isGameBegun, setIsGameBegun] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [startTime, setStartTime] = useState<Date>(new Date());\n\n  const startGame = (cards: number) => {\n    setStartTime(new Date());\n    setLoading(true);\n    setNumberOfCards(cards);\n    setIsGameBegun(true);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return <Loader fullScreen defaultColor={false} />;\n  };\n\n  return (\n    isGameBegun ? <Card\n      playAgain={() => setIsGameBegun(false)}\n      numberOfCards={numberOfCards}\n      startTime={startTime}\n    /> :\n      <Game\n        startGame={startGame}\n      />\n  );\n};\n\nexport default Playground;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n  },\n});\n\nexport default useStyles;\n","import React, { ReactElement, useState, useEffect } from 'react';\nimport Loader from './components/common/Loader';\nimport Login from './components/login/index';\nimport Playground from './components/playground/index';\nimport useStyles from './App.style';\n\nconst App = (): ReactElement => {\n  const styles = useStyles();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const mount = () => {\n      const username = localStorage.getItem('username');\n      if (username !== null && username !== undefined && username !== '') {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setTimeout(() => {\n        setLoading(false);\n      }, 2000);\n    }\n    mount();\n  }, []);\n\n  const onSubmit = async () => {\n    setLoading(true);\n    setIsLoggedIn(true);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return <Loader fullScreen defaultColor={false} />;\n  }\n\n  return (\n    <div className={styles.root}>\n      {isLoggedIn ? <Playground /> : <Login onSubmit={onSubmit} />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}